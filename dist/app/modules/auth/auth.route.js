"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthRoute = void 0;
const express_1 = __importDefault(require("express"));
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const auth_validation_1 = require("./auth.validation");
const auth_controller_1 = require("./auth.controller");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const auth_constannts_1 = require("./auth.constannts");
const multer_config_1 = require("../../config/multer.config");
// import { upload } from "../../utils/sendImageToCloudinary";
const router = express_1.default.Router();
router.post("/signup", multer_config_1.multerUpload.single("file"), auth_controller_1.AuthControllers.signup);
router.post("/login", (0, validateRequest_1.default)(auth_validation_1.AuthValidations.LoginValidationSchema), auth_controller_1.AuthControllers.loginUser);
router.post("/refresh-token", (0, validateRequest_1.default)(auth_validation_1.AuthValidations.refreshTokenValidationSchema), auth_controller_1.AuthControllers.refreshToken);
router.post("/forgot-password", auth_controller_1.AuthControllers.forgetPassword);
router.post("/reset-password", (0, validateRequest_1.default)(auth_validation_1.AuthValidations.resetPasswordValidationSchema), auth_controller_1.AuthControllers.resetPassword);
router.post("/save-push-notification-token", auth_controller_1.AuthControllers.savePushToken);
router.put("/change-role", (0, auth_1.default)(auth_constannts_1.UserRole.admin), auth_controller_1.AuthControllers.changeUserRole);
router.put("/assign-pages", (0, auth_1.default)(auth_constannts_1.UserRole.admin), auth_controller_1.AuthControllers.assignPagesToUser);
exports.AuthRoute = router;
